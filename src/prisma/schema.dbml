//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Project "FyTy Core Database" {
  database_type: ''
  Note: ''
}

Table Game {
  id String [pk]
  name String [unique, not null]
  teamCap Int [not null]
  lineupCap Int [not null]
  logoUrl String [not null]
  coverUrl String [not null]
  isActive Boolean [not null, default: true]
  desc String [not null, default: '']
}

Table Room {
  id String [pk]
  name String [not null]
  status RoomStatus [not null, default: 'AVAILABLE']
  option String [not null, default: '']
  startAt DateTime [not null]
  endAt DateTime [not null]
  isPrivate Boolean [not null, default: false]
  teamCount Int [not null, default: 1]
  note String [not null, default: '']
  gameId String [not null]
  hostTeamId String [not null]
  updatedAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table RoomSettings {
  id String [pk]
  roomId String [unique, not null]
}

Table RoomMember {
  id String [pk]
  teamId String [not null]
  roomId String [not null]
  joinedAt DateTime [default: `now()`, not null]

  indexes {
    (teamId, roomId) [unique]
  }
}

Table RoomLineup {
  id String [pk]
  teamLineupId String [not null]
  roomMemberId String [not null]
  roomId String [not null]

  indexes {
    (teamLineupId, roomMemberId, roomId) [unique]
  }
}

Table RoomPending {
  id String [pk]
  teamId String [not null]
  roomId String [not null]
  status PendingStatus [not null, default: 'INCOMING']
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (teamId, roomId) [unique]
  }
}

Table RoomPendingLineup {
  id String [pk]
  roomPendingId String [not null]
  teamLineupId String [not null]

  indexes {
    (roomPendingId, teamLineupId) [unique]
  }
}

Table Team {
  id String [pk]
  name String [not null]
  coverUrl String [not null, default: '']
  logoUrl String [not null, default: '']
  tier String [not null, default: '']
  isPrivate Boolean [not null, default: false]
  gameId String [not null]
  founderId String
  isDeleted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
}

Table TeamSettings {
  id String [pk]
  teamId String [unique, not null]
  isJoiningEnabled Boolean [not null, default: true]
}

Table TeamMember {
  id String [pk]
  role MemberRole [not null, default: 'MEMBER']
  teamId String [not null]
  userId String [not null]
  joinedAt DateTime [default: `now()`, not null]
}

Table TeamLineup {
  id String [pk]
  teamId String [not null]
  avatarId String
  inGameId String
  isDefault Boolean [not null, default: false]
  profileUrl String [not null, default: '']
  imageUrl String [not null, default: '']
  name String [not null, default: 'new player']
  note String [not null, default: '']
}

Table TeamPending {
  id String [pk]
  teamId String [not null]
  userId String [not null]
  status PendingStatus [not null, default: 'INCOMING']
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (teamId, userId) [unique]
  }
}

Table User {
  id String [pk]
  username String [unique, not null]
  updatedUsernameAt DateTime
  mobilePhone String [unique, not null]
  updatedMobilePhoneAt DateTime
  password String [not null]
  displayName String [not null]
  email String [unique]
  updatedEmailAt DateTime
  bio String [not null, default: '']
  portraitUrl String [not null, default: '']
  coverUrl String [not null, default: '']
  isVerified Boolean [not null, default: false]
  isDeactivated Boolean [not null, default: false]
  facebookId String [unique]
  googleId String [unique]
  lineId String [unique]
  lineToken String [unique]
  firstLoginAt DateTime
  lastLoginAt DateTime
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table UserSettings {
  id String [pk]
  userId String [unique, not null]
  isNotifiedBeforeTrainingMinute Int [not null, default: 60]
  isTeamNotified Boolean [not null, default: true]
  isMeNotified Boolean [not null, default: true]
  isRoomNotified Boolean [not null, default: true]
  lang Lang [not null, default: 'TH']
}

Table PasswordResetSession {
  id String [pk]
  userId String [unique, not null]
  token String [unique, not null]
  attemptCount Int [not null, default: 0]
  expiredAt DateTime [not null]
  updatedAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table UserAvatar {
  id String [pk]
  inGameId String [not null]
  characterName String [not null, default: '']
  rank String [not null]
  ratingScore Decimal [not null, default: 0]
  gameId String [not null]
  userId String [not null]
}

Table Review {
  id String [pk]
  content String [not null]
  ratingScore Decimal [not null, default: 0]
  reviewerId String
  revieweeId String [not null]
  gameId String [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table Appointment {
  id String [pk]
  startAt DateTime [not null]
  endAt DateTime [not null]
  deletedBeforeAt DateTime
  isDeleted Boolean [not null, default: false]
  roomId String [unique]
  createdAt DateTime [default: `now()`, not null]
}

Table AppointmentMember {
  id String [pk]
  appointmentId String [not null]
  teamId String [not null]
  isLeft Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (appointmentId, teamId) [unique]
  }
}

Table Chat {
  id String [pk]
  roomId String [unique, not null]
}

Table Message {
  id String [pk]
  chatId String [not null]
  replyId String
  imageUrls String[] [not null]
  teamId String
  senderId String
  message String [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table TeamStats {
  id String [pk]
  teamId String [unique, not null]
  leftWhileTrainingCount Int [not null, default: 0]
  completedTrainingCount Int [not null, default: 0]
  trainingMinute Int [not null, default: 0]
  trainingCount Int [not null, default: 0]
  winCount Int [not null, default: 0]
  loseCount Int [not null, default: 0]
  tieCount Int [not null, default: 0]
  updateAt DateTime [not null]
}

Table Training {
  id String [pk]
  appointmentId String [unique, not null]
  hostId String
  guestId String
  hostWinCount Int
  hostLoseCount Int
  note String [not null, default: '']
  deniedReason String [not null, default: '']
  status TrainingStatus [not null, default: 'UNREVIEWED']
  imageUrls String[] [not null]
  isSubmitted Boolean [not null, default: false]
  updatedAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table TrainingRevision {
  id String [pk]
  fromTeamId String
  trainingId String [unique, not null]
  note String [not null, default: '']
  hostWinCount Int [not null]
  hostLoseCount Int [not null]
  imageUrls String[] [not null]
}

Table TrainingReport {
  id String [pk]
  reporterUserId String
  reporterTeamId String
  trainingId String [not null]
  isAdminReviewed Boolean [not null, default: false]
  heading String [not null]
  content String [not null]
  imageUrls String[] [not null]
  createdAt DateTime [default: `now()`, not null]
}

Table Image {
  id String [pk]
}

Table Admin {
  id String [pk]
  email String [unique, not null]
  password String [not null]
  role AdminRole [not null, default: 'MANAGEMENT']
  createdAt DateTime [default: `now()`, not null]
  updateAt DateTime [not null]
}

Enum Lang {
  TH
  EN
}

Enum RoomStatus {
  AVAILABLE
  UNAVAILABLE
  CONFIRMED
  FULL
}

Enum MemberRole {
  HEAD_COACH
  LEADER
  MANAGER
  MEMBER
}

Enum TrainingStatus {
  ACCEPTED
  DENIED
  CONFLICTED
  INEFFECTIVE
  UNREVIEWED
}

Enum PendingStatus {
  INCOMING
  OUTGOING
}

Enum AdminRole {
  MANAGEMENT
}

Ref: Room.gameId > Game.id

Ref: Room.hostTeamId > Team.id

Ref: RoomSettings.roomId - Room.id [delete: Cascade]

Ref: RoomMember.teamId > Team.id [delete: Cascade]

Ref: RoomMember.roomId > Room.id [delete: Cascade]

Ref: RoomLineup.teamLineupId > TeamLineup.id [delete: Cascade]

Ref: RoomLineup.roomMemberId > RoomMember.id [delete: Cascade]

Ref: RoomLineup.roomId > Room.id [delete: Cascade]

Ref: RoomPending.teamId > Team.id [delete: Cascade]

Ref: RoomPending.roomId > Room.id [delete: Cascade]

Ref: RoomPendingLineup.roomPendingId > RoomPending.id [delete: Cascade]

Ref: RoomPendingLineup.teamLineupId > TeamLineup.id [delete: Cascade]

Ref: Team.gameId > Game.id

Ref: Team.founderId > User.id [delete: Set Null]

Ref: TeamSettings.teamId - Team.id [delete: Cascade]

Ref: TeamMember.teamId > Team.id [delete: Cascade]

Ref: TeamMember.userId > User.id [delete: Cascade]

Ref: TeamLineup.teamId > Team.id [delete: Cascade]

Ref: TeamLineup.avatarId > UserAvatar.id [delete: Cascade]

Ref: TeamPending.teamId > Team.id [delete: Cascade]

Ref: TeamPending.userId > User.id [delete: Cascade]

Ref: UserSettings.userId - User.id [delete: Cascade]

Ref: PasswordResetSession.userId - User.id [delete: Cascade]

Ref: UserAvatar.gameId > Game.id

Ref: UserAvatar.userId > User.id [delete: Cascade]

Ref: Review.reviewerId > User.id [delete: Set Null]

Ref: Review.revieweeId > User.id [delete: Set Null]

Ref: Review.gameId > Game.id

Ref: Appointment.roomId - Room.id [delete: Set Null]

Ref: AppointmentMember.appointmentId > Appointment.id [delete: Cascade]

Ref: AppointmentMember.teamId > Team.id [delete: Cascade]

Ref: Chat.roomId - Room.id [delete: Cascade]

Ref: Message.chatId > Chat.id [delete: Cascade]

Ref: Message.replyId - Message.id [delete: Cascade]

Ref: Message.teamId > Team.id [delete: Set Null]

Ref: Message.senderId > User.id [delete: Set Null]

Ref: TeamStats.teamId - Team.id [delete: Cascade]

Ref: Training.appointmentId - Appointment.id [delete: Cascade]

Ref: Training.hostId > Team.id [delete: Set Null]

Ref: Training.guestId > Team.id [delete: Set Null]

Ref: TrainingRevision.fromTeamId > Team.id [delete: Set Null]

Ref: TrainingRevision.trainingId - Training.id [delete: Cascade]

Ref: TrainingReport.reporterUserId > User.id [delete: Set Null]

Ref: TrainingReport.reporterTeamId > Team.id [delete: Set Null]

Ref: TrainingReport.trainingId > Training.id [delete: Cascade]